name: Coverage
on:
  push:
  pull_request:

jobs:
  coverage:
    name: Run on Linux
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ ubuntu-18.04 ]
        php: [ 7.3 ]
        db: [ pgsql ]
        include:
          - db: pgsql
            dbport: '5432'
            dbuser: 'postgres'
            dbpass: 'password'
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mailcatcher:
        image: schickling/mailcatcher
        ports:
          - 1080:1080
          - 1025:1025
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Setup PHP
      uses: nanasess/setup-php@master
      with:
        php-version: ${{ matrix.php }}
    - name: Install to Composer
      run: composer install --no-interaction -o

    - name: Setup to EC-CUBE
      env:
        DB: ${{ matrix.db }}
        USER: ${{ matrix.dbuser }}
        DBUSER: ${{ matrix.dbuser }}
        DBPASS: ${{ matrix.dbpass }}
        DBNAME: myapp_test
        DBPORT: ${{ matrix.dbport }}
        HTTP_URL: http://localhost:8085/
        HTTPS_URL: http://localhost:8085/
      run: |
        sudo apt-fast install -y postgresql-client
        ./eccube_install.sh ${DB}

    - name: Run to PHPUnit
      continue-on-error: true
      run: phpdbg -qrr data/vendor/bin/phpunit -c phpunit.xml.dist --exclude-group classloader

    - uses: codecov/codecov-action@v1.0.2
      continue-on-error: true
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./reports/coverage/coverage.xml
