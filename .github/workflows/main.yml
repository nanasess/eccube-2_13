name: CI/CD for EC-CUBE
on: [push, pull_request]
jobs:
  tests:
    name: Tests
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ ubuntu-18.04 ]
        php: [ 5.4, 5.5, 5.6, 7.1, 7.2, 7.3 ]
        db: [ mysql, pgsql ]
        include:
          - db: mysql
            dbport: '3307'
            dbuser: 'root'
          - db: pgsql
            dbport: '5432'
            dbuser: 'postgres'
    services:
      mailcatcher:
        image: schickling/mailcatcher
        ports:
          - 1080:1080
          - 1025:1025
    steps:
    - name: check aws
      run: |
        which aws
        aws --help
    - name: Checkout
      uses: actions/checkout@master
    - name: Setup PHP
      uses: nanasess/setup-php@master
      with:
        php-version: ${{ matrix.php }}

    - name: Setup MySQL
      if: matrix.db == 'mysql'
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: ${{ matrix.dbport }}
        container port: '3306'
        mysql version: '5.7'
        mysql database: 'myapp_test'
        mysql root password: 'password'

    - name: Setup PostgreSQL
      if: matrix.db == 'pgsql'
      uses: harmon758/postgresql-action@master
      with:
        postgresql version: '11'
        postgresql db: 'myapp_test'
        postgresql user: ${{ matrix.dbuser }}
        postgresql password: 'password'

    - name: Setup Composer
      uses: nanasess/composer-installer-action@master
    - name: Install to Composer
      run: composer install --no-interaction -o

    - name: Setup to EC-CUBE
      env:
        DB: ${{ matrix.db }}
        USER: ${{ matrix.dbuser }}
        DBUSER: ${{ matrix.dbuser }}
        DBPASS: password
        DBNAME: myapp_test
        DBPORT: ${{ matrix.dbport }}
        HTTP_URL: http://localhost:8085/
        HTTPS_URL: http://localhost:8085/
      run: |
        sudo apt-fast install -y mysql-client postgresql-client
        ./eccube_install.sh ${DB}

    - name: Run to PHPUnit
      run: data/vendor/bin/phpunit --exclude-group classloader

    - name: Setup E2E environment
      run: |
        sudo apt-fast install -y build-essential debconf-utils screen google-chrome-stable
        sudo apt-fast install -y unzip xvfb autogen autoconf libtool pkg-config nasm libgconf-2-4 x11-apps
        wget -c -nc --retry-connrefused --tries=0 http://chromedriver.storage.googleapis.com/2.43/chromedriver_linux64.zip
        unzip -o -q chromedriver_linux64.zip
        export DISPLAY=:99
        ./chromedriver --url-base=/wd/hub &
        echo ">>> Started chrome-driver"
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
        echo ">>> Started xvfb"
    - name: Run to Codeception
      run: |
        php data/vendor/bin/codecept build
        php -S 0.0.0.0:8085 -t html/ &
        php data/vendor/bin/codecept run --env chrome --steps
  Deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    needs: tests
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Setup Composer
      uses: nanasess/composer-installer-action@master
    - name: Install to Composer
      run: composer install --no-dev --no-interaction -o

    - name: Prepare packaging
      run: |
        echo "remove obsolete files..."
        rm -rf .setttings
        rm -rf .buildpath
        rm -rf .project
        rm -rf test
        rm -rf templates
        rm -rf release.sh
        rm -rf html/test
        rm -rf .git

        echo "set permissions..."
        chmod -R a+w html/install/temp
        chmod -R a+w html/user_data
        chmod -R a+w html/upload
        chmod -R a+w data/cache
        chmod -R a+w data/downloads
        chmod -R a+w data/Smarty
        chmod -R a+w data/class
        chmod -R a+w data/logs
        chmod -R a+w data/upload
        chmod -R a+w data/config
        chmod a+w html
    - name: Packaging
      run: echo "packaging"

